<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wr.estate.mapper.work.cleaningMangement.CleanMapper" >
  <resultMap id="BaseResultMap" type="com.wr.remote.work.cleaningManagement.Clean" >
    <id column="clean_id" property="cleanId" jdbcType="BIGINT" />
    <result column="community_id" property="communityId" jdbcType="BIGINT" />
    <result column="clean_no" property="cleanNo" jdbcType="VARCHAR" />
    <result column="clean_name" property="cleanName" jdbcType="VARCHAR" />
    <result column="data_source" property="dataSource" jdbcType="CHAR" />
    <result column="plan_id" property="planId" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="venue_id" property="venueId" jdbcType="BIGINT" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="allot_way" property="allotWay" jdbcType="CHAR" />
    <result column="patrol_num" property="patrolNum" jdbcType="INTEGER" />
    <result column="gap_time" property="gapTime" jdbcType="DECIMAL" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="staff_id" property="staffId" jdbcType="BIGINT" />
    <result column="assist_num" property="assistNum" jdbcType="INTEGER" />
    <result column="transfer_status" property="transferStatus" jdbcType="CHAR" />
    <result column="allot_status" property="allotStatus" jdbcType="CHAR" />
    <result column="accept_status" property="acceptStatus" jdbcType="CHAR" />
    <result column="execute_status" property="executeStatus" jdbcType="CHAR" />
    <result column="execute_id" property="executeId" jdbcType="BIGINT" />
    <result column="execute_time" property="executeTime" jdbcType="TIMESTAMP" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>

  <resultMap id="BaseVoResultMap" type="com.wr.estate.entity.vo.CleanVo" >
    <id column="clean_id" property="cleanId" jdbcType="BIGINT" />
    <result column="community_id" property="communityId" jdbcType="BIGINT" />
    <result column="clean_no" property="cleanNo" jdbcType="VARCHAR" />
    <result column="clean_name" property="cleanName" jdbcType="VARCHAR" />
    <result column="data_source" property="dataSource" jdbcType="CHAR" />
    <result column="plan_id" property="planId" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="venue_id" property="venueId" jdbcType="BIGINT" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="allot_way" property="allotWay" jdbcType="CHAR" />
    <result column="patrol_num" property="patrolNum" jdbcType="INTEGER" />
    <result column="gap_time" property="gapTime" jdbcType="DECIMAL" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="staff_name" property="staffName" jdbcType="VARCHAR" />
    <result column="assist_num" property="assistNum" jdbcType="INTEGER" />
    <result column="transfer_status" property="transferStatus" jdbcType="CHAR" />
    <result column="allot_status" property="allotStatus" jdbcType="CHAR" />
    <result column="accept_status" property="acceptStatus" jdbcType="CHAR" />
    <result column="execute_status" property="executeStatus" jdbcType="CHAR" />
    <result column="execute_id" property="executeId" jdbcType="BIGINT" />
    <result column="execute_time" property="executeTime" jdbcType="TIMESTAMP" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    clean_id, community_id, clean_no, clean_name, data_source, plan_id, order_no, venue_id,
    address, allot_way, patrol_num, gap_time, start_time, end_time, staff_id, assist_num,
    transfer_status, allot_status, accept_status, execute_status, execute_id, execute_time,
    finish_time, image_url, remark, create_by, create_time, update_by, update_time, del_flag
  </sql>

  <sql id="BaseVo_Column_List" >
    bc.clean_id, bc.community_id, bc.clean_no, bc.clean_name, bc.data_source, bc.plan_id, bc.order_no,
    bc.venue_id, bc.address, bc.allot_way, bc.patrol_num, bc.gap_time, bc.start_time, bc.end_time, bs.staff_name,
    bc.assist_num, bc.transfer_status, bc.allot_status, bc.accept_status, bc.execute_status, bc.execute_id,bc.staff_id,
    bc.execute_time, bc.finish_time, bc.image_url, bc.remark, bc.create_by, bc.create_time, bc.update_by,
    bc.update_time, bc.del_flag
  </sql>

  <select id="selectByExample" resultMap="BaseVoResultMap" parameterType="com.wr.remote.work.cleaningManagement.CleanExample" >
    select
    <include refid="BaseVo_Column_List" />
    from xccj_work.bus_clean bc
    LEFT JOIN xccj_community.bus_staff bs on bc.staff_id = bs.staff_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKeySingle" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xccj_work.bus_clean
    where clean_id = #{cleanId,jdbcType=BIGINT}
  </select>

  <select id="selectByPrimaryKeyOne" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xccj_work.bus_clean
    where plan_id = #{cleanId,jdbcType=BIGINT}
    ORDER BY create_time DESC
    LIMIT 1
  </select>


  <select id="selectByPrimaryKey" resultMap="BaseVoResultMap" parameterType="java.lang.Long" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="BaseVo_Column_List" />
    from xccj_work.bus_clean bc
    LEFT JOIN xccj_community.bus_staff bs on bc.staff_id = bs.staff_id
    where bc.clean_id = #{cleanId,jdbcType=BIGINT}
  </select>

  <select id="selectByPrimaryexecuteId" resultType="com.wr.remote.estate.manage.Staff" parameterType="java.lang.Long" >
    select
        *
    from xccj_community.bus_staff
    where staff_id = #{executeId,jdbcType=BIGINT}
  </select>


  <update id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    update  xccj_work.bus_clean set del_flag = '1'
    where clean_id = #{cleanId,jdbcType=BIGINT}
  </update>
  <delete id="deleteByExample" parameterType="com.wr.remote.work.cleaningManagement.CleanExample" >
    delete from xccj_work.bus_clean
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wr.remote.work.cleaningManagement.Clean" >
    insert into xccj_work.bus_clean (clean_id, community_id, clean_no,
    clean_name, data_source, plan_id,
    order_no, venue_id, address,
    allot_way, patrol_num, gap_time,
    start_time, end_time, staff_id,
    assist_num, transfer_status, allot_status,
    accept_status, execute_status, execute_id,
    execute_time, finish_time, image_url,
    remark, create_by, create_time,
    update_by, update_time, del_flag
    )
    values (#{cleanId,jdbcType=BIGINT}, #{communityId,jdbcType=BIGINT}, #{cleanNo,jdbcType=VARCHAR},
    #{cleanName,jdbcType=VARCHAR}, #{dataSource,jdbcType=CHAR}, #{planId,jdbcType=BIGINT},
    #{orderNo,jdbcType=VARCHAR}, #{venueId,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR},
    #{allotWay,jdbcType=CHAR}, #{patrolNum,jdbcType=INTEGER}, #{gapTime,jdbcType=DECIMAL},
    #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{staffId,jdbcType=BIGINT},
    #{assistNum,jdbcType=INTEGER}, #{transferStatus,jdbcType=CHAR}, #{allotStatus,jdbcType=CHAR},
    #{acceptStatus,jdbcType=CHAR}, #{executeStatus,jdbcType=CHAR}, #{executeId,jdbcType=BIGINT},
    #{executeTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, #{imageUrl,jdbcType=VARCHAR},
    #{remark,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
    #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=CHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.wr.remote.work.cleaningManagement.Clean" >
    insert into xccj_work.bus_clean
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cleanId != null" >
        clean_id,
      </if>
      <if test="communityId != null" >
        community_id,
      </if>
      <if test="cleanNo != null" >
        clean_no,
      </if>
      <if test="cleanName != null" >
        clean_name,
      </if>
      <if test="dataSource != null" >
        data_source,
      </if>
      <if test="planId != null" >
        plan_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="venueId != null" >
        venue_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="allotWay != null" >
        allot_way,
      </if>
      <if test="patrolNum != null" >
        patrol_num,
      </if>
      <if test="gapTime != null" >
        gap_time,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="assistNum != null" >
        assist_num,
      </if>
      <if test="transferStatus != null" >
        transfer_status,
      </if>
      <if test="allotStatus != null" >
        allot_status,
      </if>
      <if test="acceptStatus != null" >
        accept_status,
      </if>
      <if test="executeStatus != null" >
        execute_status,
      </if>
      <if test="executeId != null" >
        execute_id,
      </if>
      <if test="executeTime != null" >
        execute_time,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="imageUrl != null" >
        image_url,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cleanId != null" >
        #{cleanId,jdbcType=BIGINT},
      </if>
      <if test="communityId != null" >
        #{communityId,jdbcType=BIGINT},
      </if>
      <if test="cleanNo != null" >
        #{cleanNo,jdbcType=VARCHAR},
      </if>
      <if test="cleanName != null" >
        #{cleanName,jdbcType=VARCHAR},
      </if>
      <if test="dataSource != null" >
        #{dataSource,jdbcType=CHAR},
      </if>
      <if test="planId != null" >
        #{planId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="venueId != null" >
        #{venueId,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="allotWay != null" >
        #{allotWay,jdbcType=CHAR},
      </if>
      <if test="patrolNum != null" >
        #{patrolNum,jdbcType=INTEGER},
      </if>
      <if test="gapTime != null" >
        #{gapTime,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=BIGINT},
      </if>
      <if test="assistNum != null" >
        #{assistNum,jdbcType=INTEGER},
      </if>
      <if test="transferStatus != null" >
        #{transferStatus,jdbcType=CHAR},
      </if>
      <if test="allotStatus != null" >
        #{allotStatus,jdbcType=CHAR},
      </if>
      <if test="acceptStatus != null" >
        #{acceptStatus,jdbcType=CHAR},
      </if>
      <if test="executeStatus != null" >
        #{executeStatus,jdbcType=CHAR},
      </if>
      <if test="executeId != null" >
        #{executeId,jdbcType=BIGINT},
      </if>
      <if test="executeTime != null" >
        #{executeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imageUrl != null" >
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wr.remote.work.cleaningManagement.CleanExample" resultType="java.lang.Integer" >
    select count(*) from xccj_work.bus_clean
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xccj_work.bus_clean
    <set >
      <if test="record.cleanId != null" >
        clean_id = #{record.cleanId,jdbcType=BIGINT},
      </if>
      <if test="record.communityId != null" >
        community_id = #{record.communityId,jdbcType=BIGINT},
      </if>
      <if test="record.cleanNo != null" >
        clean_no = #{record.cleanNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cleanName != null" >
        clean_name = #{record.cleanName,jdbcType=VARCHAR},
      </if>
      <if test="record.dataSource != null" >
        data_source = #{record.dataSource,jdbcType=CHAR},
      </if>
      <if test="record.planId != null" >
        plan_id = #{record.planId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.venueId != null" >
        venue_id = #{record.venueId,jdbcType=BIGINT},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.allotWay != null" >
        allot_way = #{record.allotWay,jdbcType=CHAR},
      </if>
      <if test="record.patrolNum != null" >
        patrol_num = #{record.patrolNum,jdbcType=INTEGER},
      </if>
      <if test="record.gapTime != null" >
        gap_time = #{record.gapTime,jdbcType=DECIMAL},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.staffId != null" >
        staff_id = #{record.staffId,jdbcType=BIGINT},
      </if>
      <if test="record.assistNum != null" >
        assist_num = #{record.assistNum,jdbcType=INTEGER},
      </if>
      <if test="record.transferStatus != null" >
        transfer_status = #{record.transferStatus,jdbcType=CHAR},
      </if>
      <if test="record.allotStatus != null" >
        allot_status = #{record.allotStatus,jdbcType=CHAR},
      </if>
      <if test="record.acceptStatus != null" >
        accept_status = #{record.acceptStatus,jdbcType=CHAR},
      </if>
      <if test="record.executeStatus != null" >
        execute_status = #{record.executeStatus,jdbcType=CHAR},
      </if>
      <if test="record.executeId != null" >
        execute_id = #{record.executeId,jdbcType=BIGINT},
      </if>
      <if test="record.executeTime != null" >
        execute_time = #{record.executeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null" >
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.imageUrl != null" >
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xccj_work.bus_clean
    set clean_id = #{record.cleanId,jdbcType=BIGINT},
    community_id = #{record.communityId,jdbcType=BIGINT},
    clean_no = #{record.cleanNo,jdbcType=VARCHAR},
    clean_name = #{record.cleanName,jdbcType=VARCHAR},
    data_source = #{record.dataSource,jdbcType=CHAR},
    plan_id = #{record.planId,jdbcType=BIGINT},
    order_no = #{record.orderNo,jdbcType=VARCHAR},
    venue_id = #{record.venueId,jdbcType=BIGINT},
    address = #{record.address,jdbcType=VARCHAR},
    allot_way = #{record.allotWay,jdbcType=CHAR},
    patrol_num = #{record.patrolNum,jdbcType=INTEGER},
    gap_time = #{record.gapTime,jdbcType=DECIMAL},
    start_time = #{record.startTime,jdbcType=TIMESTAMP},
    end_time = #{record.endTime,jdbcType=TIMESTAMP},
    staff_id = #{record.staffId,jdbcType=BIGINT},
    assist_num = #{record.assistNum,jdbcType=INTEGER},
    transfer_status = #{record.transferStatus,jdbcType=CHAR},
    allot_status = #{record.allotStatus,jdbcType=CHAR},
    accept_status = #{record.acceptStatus,jdbcType=CHAR},
    execute_status = #{record.executeStatus,jdbcType=CHAR},
    execute_id = #{record.executeId,jdbcType=BIGINT},
    execute_time = #{record.executeTime,jdbcType=TIMESTAMP},
    finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
    image_url = #{record.imageUrl,jdbcType=VARCHAR},
    remark = #{record.remark,jdbcType=VARCHAR},
    create_by = #{record.createBy,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_by = #{record.updateBy,jdbcType=VARCHAR},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP},
    del_flag = #{record.delFlag,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wr.remote.work.cleaningManagement.Clean" >

    update xccj_work.bus_clean
    <set >
      <if test="communityId != null" >
        community_id = #{communityId,jdbcType=BIGINT},
      </if>
      <if test="cleanNo != null" >
        clean_no = #{cleanNo,jdbcType=VARCHAR},
      </if>
      <if test="cleanName != null" >
        clean_name = #{cleanName,jdbcType=VARCHAR},
      </if>
      <if test="dataSource != null" >
        data_source = #{dataSource,jdbcType=CHAR},
      </if>
      <if test="planId != null" >
        plan_id = #{planId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="venueId != null" >
        venue_id = #{venueId,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="allotWay != null" >
        allot_way = #{allotWay,jdbcType=CHAR},
      </if>
      <if test="patrolNum != null" >
        patrol_num = #{patrolNum,jdbcType=INTEGER},
      </if>
      <if test="gapTime != null" >
        gap_time = #{gapTime,jdbcType=DECIMAL},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=BIGINT},
      </if>
      <if test="assistNum != null" >
        assist_num = #{assistNum,jdbcType=INTEGER},
      </if>
      <if test="transferStatus != null" >
        transfer_status = #{transferStatus,jdbcType=CHAR},
      </if>
      <if test="allotStatus != null" >
        allot_status = #{allotStatus,jdbcType=CHAR},
      </if>
      <if test="acceptStatus != null" >
        accept_status = #{acceptStatus,jdbcType=CHAR},
      </if>
      <if test="executeStatus != null" >
        execute_status = #{executeStatus,jdbcType=CHAR},
      </if>
      <if test="executeId != null" >
        execute_id = #{executeId,jdbcType=BIGINT},
      </if>
      <if test="executeTime != null" >
        execute_time = #{executeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imageUrl != null" >
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where clean_id = #{cleanId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wr.remote.work.cleaningManagement.Clean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 20:24:38 CST 2022.
    -->
    update xccj_work.bus_clean
    set community_id = #{communityId,jdbcType=BIGINT},
    clean_no = #{cleanNo,jdbcType=VARCHAR},
    clean_name = #{cleanName,jdbcType=VARCHAR},
    data_source = #{dataSource,jdbcType=CHAR},
    plan_id = #{planId,jdbcType=BIGINT},
    order_no = #{orderNo,jdbcType=VARCHAR},
    venue_id = #{venueId,jdbcType=BIGINT},
    address = #{address,jdbcType=VARCHAR},
    allot_way = #{allotWay,jdbcType=CHAR},
    patrol_num = #{patrolNum,jdbcType=INTEGER},
    gap_time = #{gapTime,jdbcType=DECIMAL},
    start_time = #{startTime,jdbcType=TIMESTAMP},
    end_time = #{endTime,jdbcType=TIMESTAMP},
    staff_id = #{staffId,jdbcType=BIGINT},
    assist_num = #{assistNum,jdbcType=INTEGER},
    transfer_status = #{transferStatus,jdbcType=CHAR},
    allot_status = #{allotStatus,jdbcType=CHAR},
    accept_status = #{acceptStatus,jdbcType=CHAR},
    execute_status = #{executeStatus,jdbcType=CHAR},
    execute_id = #{executeId,jdbcType=BIGINT},
    execute_time = #{executeTime,jdbcType=TIMESTAMP},
    finish_time = #{finishTime,jdbcType=TIMESTAMP},
    image_url = #{imageUrl,jdbcType=VARCHAR},
    remark = #{remark,jdbcType=VARCHAR},
    create_by = #{createBy,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_by = #{updateBy,jdbcType=VARCHAR},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    del_flag = #{delFlag,jdbcType=CHAR}
    where clean_id = #{cleanId,jdbcType=BIGINT}
  </update>


  <select id="getSatffNameList" resultType="com.wr.remote.estate.manage.Staff">
    SELECT
      bs.staff_id as staffId,
      bs.user_id as userId,
      bs.community_id as communityId,
      bs.staff_name as staffName,
      bs.staff_phone as staffPhone,
      bs.gender as gender,
      bs.card_no as cardNo,
      bs.avatar as avatar,
      bs.staff_type as staffType,
      bs.work_post as workPost,
      bs.healthy as healthy,
      bs.education as education,
      bs.cert_url as certUrl,
      bs.work_year as workYear,
      bs.audit_status as auditStatus,
      bs.entry_time as entryTime,
      bs.dimission_time as dimissionTime,
      bs.address as address,
      bs.staff_intro as staffIntro,
      bs.create_by as createBy,
      bs.create_time as createTime,
      bs.update_by as updateBy,
      bs.update_time as updateTime,
      bs.del_flag as delflag
      from xccj_community.bus_staff bs
    WHERE bs.del_flag = '0' and bs.work_post = '4' and bs.audit_status ='1' and bs.dimission_time  is null
      and bs.community_id = #{communityId}
  </select>

  <select id="getSatffByIdStaffId" resultType="com.wr.remote.estate.manage.Staff">
    SELECT
      bs.staff_id as staffId,
      bs.user_id as userId,
      bs.community_id as communityId,
      bs.staff_name as staffName,
      bs.staff_phone as staffPhone,
      bs.gender as gender,
      bs.card_no as cardNo,
      bs.avatar as avatar,
      bs.staff_type as staffType,
      bs.work_post as workPost,
      bs.healthy as healthy,
      bs.education as education,
      bs.cert_url as certUrl,
      bs.work_year as workYear,
      bs.audit_status as auditStatus,
      bs.entry_time as entryTime,
      bs.dimission_time as dimissionTime,
      bs.address as address,
      bs.staff_intro as staffIntro,
      bs.create_by as createBy,
      bs.create_time as createTime,
      bs.update_by as updateBy,
      bs.update_time as updateTime,
      bs.del_flag as delflag
    from xccj_community.bus_staff bs
    WHERE bs.staff_id = #{staffId}
  </select>

<!--  查询出已经通过审核的协助人ID-->
  <select id="selectExecutorList" resultType="com.wr.estate.entity.vo.OrderAssistVo"  parameterType="com.wr.remote.work.inspect.OrderAudit">
    SELECT oa.audit_id,oa.staff_id from xccj_work.bus_order_assist oa
    where oa.audit_id in (
        select ora.audit_id from xccj_work.bus_order_audit ora where
        ora.audit_type = #{auditType}  and ora.order_type = #{orderType}  and ora.order_id = #{orderId} and ora.audit_status = #{auditStatus}
        and ora.del_flag = '0'
        )
  </select>

<!--执行人信息-->
  <select id="getByIdStaffId" resultType="com.wr.estate.entity.vo.Executor">
    SELECT
      bs.staff_id as staffId,
      bs.staff_name as staffName,
      bs.staff_phone as staffPhone,
      bs.card_no as cardNo
    from xccj_community.bus_staff bs
    WHERE bs.staff_id = #{staffId}
  </select>

<!--  执行流程-->
  <select id="selcetOrderRecordList" resultType="com.wr.remote.work.inspect.OrderRecord">
    SELECT * from xccj_work.bus_order_record
    where order_type = '3'  and order_id = #{orderId}
    order by  create_time desc
  </select>


  <select id="selectNumber" parameterType="com.wr.remote.work.cleaningManagement.CleanExample"
          resultType="java.lang.Integer">
    select
    count(*)
    from xccj_work.bus_clean bc
    LEFT JOIN xccj_community.bus_staff bs on bc.staff_id = bs.staff_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <!--查询工单分配设置-->
  <select id="getClearOrderDistribution" resultType="com.wr.remote.work.distribution.Distribution">
    select allot_id allotId, allot_way allotWay, user_type userType, assist_num assistNum, community_id communityId
    from xccj_work.bus_allot where allot_type = '3' and del_flag = '0' and community_id = #{communityId}
  </select>

</mapper>
